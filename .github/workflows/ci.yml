name: Cnergy Backend CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main]
  push:
    branches: [main]

jobs:
  ci-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Gradle 캐시 적용
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: JDK 17 세팅
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: YML 파일 세팅
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
          TEST_APPLICATION_PROPERTIES: ${{ secrets.TEST_APPLICATION_PROPERTIES }}
        run: |
          cd ./src
          rm -rf main/resources/application.yml
          echo "$APPLICATION_PROPERTIES" > main/resources/application.yml
          echo "$TEST_APPLICATION_PROPERTIES" > test/resources/application.yml

      - name: gradlew 권한 부여
        run: chmod +x gradlew

      - name: 테스트 수행
        run: ./gradlew test

      - name: 스프링부트 빌드
        run: ./gradlew build

  docker-publish:
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest

      steps:
        - name: Docker Buildx 세팅
          uses: docker/setup-buildx-action@v1

        - name: 도커 이미지 빌드 후 푸시
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/cnergy-backend:${{ github.sha }}
            platforms: linux/amd64,linux/arm64